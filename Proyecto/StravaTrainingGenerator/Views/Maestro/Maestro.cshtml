@using StoneMVCCore.Models.Samples.Maestro
@{
    ViewBag.Title = "Maestro";
    Layout = "~/Views/Shared/Master.cshtml";
}

<h2 class="title_component">Maestro</h2>

@section css{
    <!-- Estilos especificos del control de rejilla a utilizar -->
    <link href="~/Content/kendo/css/kendo.common-bootstrap.min.css" rel="stylesheet" />
    <link href="~/Content/kendo/css/kendo.bootstrap.min.css" rel="stylesheet" />
}

@section js{
    <!-- Scripts especificos del control de rejilla a utilizar -->
    <script src="~/Content/kendo/scripts/kendo.all.min.js"></script>
    <script src="~/Content/kendo/scripts/kendo.timezones.min.js"></script>
    <script src="~/Content/kendo/scripts/kendo.aspnetmvc.min.js"></script>

    <script type="text/javascript">

        function Insertar() {

            Load_PartialView("#editor", "@Url.Action("Maestro_Editor", "Maestro")", null,
                function () {
                    $("#editor").empty();
                },
                function () {
                    $("#editor").show();
                });
        }

        function Editar() {

            Load_PartialView("#editor", "@Url.Action("Maestro_Editor", "Maestro")", { id: "id" },
                function () {
                    $("#editor").empty();
                },
                function () {
                    $("#editor").show();
                });
        }

        function Borrar() {

            $.ajax({
                url: "@Url.Action("Maestro_Borrar", "Maestro")",
                data: { id: "id" },
                type: 'DELETE',
                success: function(result) {
                    // Do something with the result
                    // For example: Remove the deleted item from view
                },
                error: function (jqXHR, textStatus, errorThrown){
                    var msg = "Sorry but there was an error: ";
                    $("#error").html(msg + jqXHR.status + " " + jqXHR.statusText);
                }
            });
        }

    </script>
}

@section popup{
    <div class="popup" id="editor" style="display:none">
    </div>
}

@*
    Cargamos con RenderPartial porque no necesitamos recopilar datos en servidor
    para cargar/poblar la vista, con los datos del modelo seria suficiente
*@
<div class="grid mb10">
    @await Component.InvokeAsync("MaestroGrid")
    @*@{ Html.RenderAction("Maestro_Grid", "Maestro"); }*@
</div>
<div class="flex flex_jcc buttons_group">
    <a href="javascript:Insertar()" class="btn btn_small">Insertar</a>
    <a href="javascript:Editar()" class="btn btn_small ml10">Editar</a>
    <a href="javascript:Borrar()" class="btn btn_small ml10">Borrar</a>
</div>


